(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Account =React.createClass({displayName: "Account",
            render: function() {
              return (
                React.createElement("tr", null, 
                  React.createElement("td", {"data-label": "Name"}, React.createElement("span", {className: "slds-truncate"}, this.props.name)), 
                  React.createElement("td", {"data-label": "Fax"}, React.createElement("span", {className: "slds-truncate"}, this.props.fax)), 
                  React.createElement("td", {"data-label": "Phone"}, React.createElement("span", {className: "slds-truncate"}, this.props.phone)), 
                  React.createElement("td", {"data-label": "Type"}, React.createElement("span", {className: "slds-truncate"}, this.props.type)), 
                  React.createElement("td", {"data-label": "Description"}, React.createElement("span", {className: "slds-truncate"}, this.props.description))
              )
          );
      }
});

module.exports = Account;

},{}],2:[function(require,module,exports){
var Account = require('./Account');
var AccountList = React.createClass({displayName: "AccountList",
            render: function() {
                console.log('DATA'+this.props.data);
                var accountNodes = this.props.data.map(function (account) {
                  return (
                    React.createElement(Account, {name: account.name, description: account.description, 
                             phone: account.phone, fax: account.fax, type: account.type, key: account.id}
                    )
                  );
            });
            return (
              React.createElement("div", {className: "slds-scrollable--x"}, 
                  React.createElement("table", {className: "slds-table slds-table--bordered slds-max-medium-table--stacked-horizontal"}, 
                      React.createElement("thead", null, 
                          React.createElement("tr", {className: "slds-text-heading--label"}, 
                              React.createElement("th", {scope: "col"}, 
                                  React.createElement("span", {className: "slds-truncate"}, "Account Name")
                              ), 
                              React.createElement("th", {scope: "col"}, 
                                  React.createElement("span", {className: "slds-truncate"}, "Fax")
                              ), 
                              React.createElement("th", {scope: "col"}, 
                                  React.createElement("span", {className: "slds-truncate"}, "Phone")
                              ), 
                              React.createElement("th", {scope: "col"}, 
                                  React.createElement("span", {className: "slds-truncate"}, "Type")
                              ), 
                               React.createElement("th", {scope: "col"}, 
                                  React.createElement("span", {className: "slds-truncate"}, "Account Description")
                              )
                          )
                      ), 
                      React.createElement("tbody", null, 
                          accountNodes
                      )
                  )
              )
            );
        }
    });
module.exports = AccountList;

},{"./Account":1}],3:[function(require,module,exports){
var AccountList = require('./AccountList');
var data=[];
var AccountView = React.createClass({displayName: "AccountView",

          getInitialState: function() {
                return {data:[]};
           },

           loadAccountsFromServer: function(){
                makeDeferredProvider();
                var wh = SObjectModel.deferredObject('acc');
                // Use the Remote Object to query for 10 warehouse records
                var whp = wh.retrieve({
                    orderby: [ { CreatedDate: "ASC" } ], 
                    limit: 100 });
                whp.then(
                   // The first function is invoked when the promise is successfully fulfilled
                function(records){
                  records.forEach(function(record) {
                                  // Build the Account data
                                  var dataitem = {
                                    "name": record.get("Name"),
                                    "description": record.get("desc"),
                                    "fax" : record.get("Fax"),
                                    "phone" : record.get("Phone"),
                                    "type" : record.get("Type"),
                                    "id"  :  record.get("Id")
                                  }
                                 data.push(dataitem);
                              }.bind(this));
                              console.log('GOT DATA HERE'+data);
                              this.setState({data: data});
                             
                }.bind(this),
                // The second function is invoked when the promise is rejected
                function(err) {
                  
                });
                console.log('INSIDE DATA1'+data);
           },

          componentDidMount: function() {
             this.loadAccountsFromServer();
             setInterval(this.loadAccountsFromServer, this.props.pollInterval);   
          },

            render: function() {
                      return (
                        React.createElement("div", {className: "myapp"}, 
                            React.createElement("div", {id: "accountList", className: "slds-p-vertical--medium"}, 
                              React.createElement("div", {className: "slds-page-header", role: "banner"}, 
                                React.createElement("div", {className: "slds-grid"}, 
                                  React.createElement("div", {className: "slds-col"}, 
                                    React.createElement("p", {className: "slds-text-heading--label"}, "Accounts"), 
                                    React.createElement("h1", {className: "slds-text-heading--medium"}, "My Accounts")
                                  )
                                )
                              ), 
                              React.createElement(AccountList, {data: this.state.data})
                            )
                        )
                      );
                    }
            });
module.exports = AccountView;

},{"./AccountList":2}],4:[function(require,module,exports){
var AccountView = require('./AccountView');
console.log('ALO ALOs');
var Account = React.render(
    React.createElement(AccountView, {pollInterval: 2000}),
    document.getElementById('content')
);

},{"./AccountView":3}]},{},[4]);
